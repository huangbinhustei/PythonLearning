#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
from flask import Flask
import os
import time
import grequests
from model import basedir, Offer, app, db


url = "http://zhaopin.baidu.com/api/quanzhiasync"
data = {
    "query": "前端工程师",
    "sort_type": 1,
    "city": "北京",
    "detailmode": "close",
    "rn": 20,
    "pn": 0
}

# citys = ("北京","天津","太原","大同","呼和浩特","包头","石家庄","廊坊","邯郸","上海","杭州","宁波","温州","南京","济南","青岛","台州","嘉兴","金华","绍兴",
# "苏州","无锡","常州","南通","扬州","徐州","连云港","福州","厦门","泉州","烟台","潍坊","临沂","淄博","菏泽","威海","合肥","马鞍山","芜湖","广州","深圳","海口",
# "三亚","南宁","桂林","玉林","百色","武汉","南昌","郑州","长沙","九江","赣州","株洲","常德","宜昌","十堰","荆州","洛阳","南阳","新乡","安阳","重庆","成都","绵阳",
# "贵阳","遵义","昆明","大理","拉萨","西安","宝鸡","西宁","银川","兰州","咸阳","天水","乌鲁木齐","昌吉","固原","沈阳","大连","哈尔滨","长春","吉林","朝阳","锦州",
# "四平","大庆","牡丹江","阿拉善盟","安康","安庆","安顺","鞍山","阿坝","阿克苏","阿里","巴彦淖尔","巴中","白城","白山","白银","蚌埠","保定","保山","北海","本溪",
# "滨州","巴音郭楞","毕节","亳州","博尔塔拉","沧州","潮州","郴州","承德","赤峰","滁州","楚雄","昌都","池州","崇左","大兴安岭","达州","丹东","德宏","德阳","德州",
# "东莞","儋州","迪庆","定西","东营","鄂尔多斯","鄂州","恩施州","佛山","防城港","抚顺","抚州","甘孜","广安","广元","贵港","阜新","阜阳","甘南","果洛","哈密地区",
# "汉中","和田地区","河池","河源","贺州","鹤壁","鹤岗","黑河","衡水","衡阳","红河","呼伦贝尔","葫芦岛","怀化","淮安","淮北","淮南","黄冈","黄山","黄石","惠州","哈密",
# "海北","海东","海南","海西","和田","湖州","黄南","济宁","鸡西","吉安","佳木斯","嘉峪关","江门","焦作","揭阳","金昌","晋城","晋中","荆门","景德镇","酒泉","济源",
# "喀什","开封","克拉玛依","克州","来宾","莱芜","乐山","丽江","丽水","凉山","辽阳","聊城","临沧","临汾","临夏","柳州","六安","六盘水","龙岩","陇南","娄底","漯河",
# "吕梁","辽源","林芝","泸州","茂名","眉山","梅州","南充","南平","内江","宁德","怒江","那曲","攀枝花","盘锦","平顶山","平凉","萍乡","莆田","濮阳","普洱","七台河",
# "齐齐哈尔","黔东南","黔南","黔西南","钦州","秦皇岛","清远","庆阳","衢州","曲靖","潜江","日照","日喀则","三门峡","三明","汕头","汕尾","商洛","商丘","上饶","韶关",
# "邵阳","双鸭山","朔州","松原","宿迁","宿州","绥化","随州","遂宁","三沙","山南","神农架","石嘴山","泰安","泰州","唐山","铁岭","通化","通辽","铜川","铜陵","吐鲁番",
# "铜仁","渭南","文山","乌海","梧州","武威","乌兰察布","吴忠","锡林郭勒","咸宁","孝感","忻州","新余","信阳","邢台","许昌","宣城","西双版纳","锡林郭勒盟","仙桃","湘潭",
# "湘西","襄阳","兴安盟","雅安","延安","延边","阳江","阳泉","伊春","伊犁","宜宾","宜春","益阳","鹰潭","营口","永州","榆林","盐城","杨凌","玉树","玉溪","岳阳",
# "云浮","运城","珠海","枣庄","湛江","张家界","张家口","漳州","昭通","肇庆","镇江","中山","舟山","周口","驻马店","资阳","自贡","张掖","长治","中卫")

# querys = (
# "销售代表","电话销售","销售经理","销售顾问","汽车销售","销售总监","医药销售","网络销售","区域销售","客户经理","市场专员","市场经理","市场拓展","市场调研","市场策划","策划经理",
# "客服专员","电话客服","客服经理","售后服务","客户关系","客服总监","公关员","公关经理","媒介专员","媒介经理","会展专员","普工","电工","木工","钳工","焊工","钣金工","锅炉工",
# "油漆工","缝纫工","维修工","水暖工","车工","叉车工","手机维修","电梯工","操作工","包装工","水泥工","钢筋工","纺织工","管道工","样衣工","装卸工","质量管理","生产组长",
# "车间主任","工艺设计","生产总监","高级工程师","机械工程","仪器仪表","机电","版图设计","商务司机","客车司机","货车司机","出租车司机","班车司机","驾校教练","带车司机","地铁司机",
# "高铁司机","小车司机","快车司机","专车司机","快递员","仓库管理","搬运工","物流专员","物流经理","调度员","外贸专员","外贸经理","采购员","采购经理","商务专员","报关员","买手",
# "保险推销","保险顾问","核保理赔","保险经纪人","保险精算师","契约管理","保险内勤","厨师","服务员","传菜员","面点师","洗碗工","后厨","杂工","学徒","咖啡师","茶艺师","迎宾",
# "酒店前台","酒店服务员","行李员","大堂经理","酒店管理","酒店管家","导游","旅游顾问","签证专员","订票员","试睡师","促销导购","营业员","收银员","理货员","食品加工","品类管理",
# "店长","发型师","美容师","化妆师","美甲师","美发助理","洗头工","美体师","美容顾问","美容助理","美容店长","宠物美容","按摩师","针灸推拿","足疗师","搓澡工","盲人按摩","礼仪",
# "调酒师","摄影师","主持人","配音员","后期制作","场务","群众演员","音效师","灯光师","编剧","主播","程序员","网页设计","技术专员","软件工程师","测试工程师","运维工程师",
# "技术支持","硬件工程师","系统工程师","通信工程师","数据工程师","前端工程师","APP开发","算法工程师","产品经理","产品运营","产品助理","项目经理","高级产品经理","产品实习生","SEO",
# "无线电","电路工程","自动化","电子维修","产品工艺","保洁","保姆","保安","月嫂","钟点工","洗衣工","护工","育婴师","送水工","家庭管家","物业维修","物业管理","物业招商",
# "物业经理","淘宝客服","淘宝美工","淘宝店长","淘宝推广","淘宝装修","淘宝策划","淘宝模特","会计","财务","出纳","审计","税务","财务分析","成本管理","教师","家教","幼教",
# "教学管理","学术研究","培训策划","课程顾问","理财顾问","证券分析","银行柜员","拍卖师","操盘手","银行经理","信贷管理","律师","律师助理","法务专员","专利顾问","合同管理","文案",
# "广告制作","咨询顾问","创意总监","广告策划","会展策划","婚礼策划","媒介策划","咨询经理","客户主管","服装设计","平面设计","美编","家具设计","美术老师","室内设计","包装设计",
# "动画设计","珠宝设计","店面设计","UI设计","编辑","记者","出版","发行","专栏作家","排版设计","英语翻译","日语翻译","俄语翻译","韩语翻译","法语翻译","德语翻译","小语种","医生",
# "护士","药剂师","理疗师","导医","营养师","心理医生","中医","健身教练","瑜伽教练","舞蹈老师","游泳教练","台球教练","高尔夫助理","体育解说员","体育记者","足球教练","污水处理",
# "环保检测","环境管理","环境绿化","水质检测员","公务员","房产销售","置业顾问","房产客服","房产策划","房产店员","房产中介","房产内勤","房产评估师","土木工程","工程监理","造价师",
# "安全专员","项目管理","园林设计","测绘员","建筑工","装修工","文员","前台","秘书","人事专员","人事经理","行政助理","行政主管","招聘专员","招聘经理","猎头顾问","培训专员","总监",
# "总裁助理","副总裁","总经理","合伙人","CEO","CTO","CFO","CPO","养殖人员","饲养业务","农艺师","畜牧师","饲料研发","酒店试睡员","美食品尝师","旅游体验师","职业拥抱师",
# "狗粮试吃员","手模","陪跑族","网购砍价师","色彩搭配师","品酒师")

querys = (
    "程序员", "网页设计",
    "软件工程师", "数据工程师", "前端工程师", "APP开发", "算法工程师", "产品经理",
    "项目经理", "高级产品经理", "教师", "家教", "幼教",
    "平面设计", "美术老师", "UI设计")
citys = ("北京", "深圳", "重庆", "成都")


def data_change(n):
    ret = data.copy()
    ret["pn"] = n
    return ret


def get_single(city, query):
    data["city"] = city
    data["query"] = query
    s = requests.session()
    r = s.get(url, params=data)
    pn_max = r.json()["data"]["main"]["data"]["listNum"]
    if not pn_max:
        return

    all_pn = [i for i in range(int(pn_max)) if i % 20 == 0]
    all_pn.append(pn_max)
    all_pn = set(all_pn)

    print("\t".join([city, query, pn_max]))

    urls = [grequests.get(url, params=data_change(pn)) for pn in all_pn]

    for r in grequests.map(urls):
        if r.status_code != 200:
            continue
        if r.json()["data"]["main"]["data"]["disp_data"]:
            for line in r.json()["data"]["main"]["data"]["disp_data"]:
                job = Offer(line, data)
                db.session.add(job)
            db.session.commit()


if __name__ == '__main__':
    for q in querys:
        for c in citys:
            time.sleep(0.5)
            get_single(c, q)
    l = []
    # with open(os.path.join(basedir, "out.txt"), "w") as f:
    #     for item in Offer.query.all():
    #         f.write("\t".join(
    #             [item._type, item._age, item._sex, item._experience, item._industry, item._education, item._salary,
    #              item._welfare, item._officialname, item._employertype, item._ori_employertype, item._ori_size]) + "\n")
