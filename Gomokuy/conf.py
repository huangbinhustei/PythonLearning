from functools import wraps
import time


ROADS = {0: (0, 1), 1: (1, 0), 2: (1, 1), 3: (1, -1)}
a = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   # 0
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   # 1
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   # 2
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   # 3
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],   # 4
    [0, 0, 0, 0, 2, 1, 2, 2, 0, 0, 0, 0],   # 5
    [0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0],   # 6
    [0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0],   # 7
    [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0],   # 8
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   # 9
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   # 10
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]   # 11
#    0  1  2  3  4  5  6  7  8  9  10 11
SCORE = {
    # True ：自己，False：对方
    True: {
        "活4": 100000000,
        "冲4": 100000000,
        "活3": 1000000,
        "冲3": 100000,
        "活2": 9000,
        "冲2": 100,
        "活1": 1,
        "冲1": 1,
    },
    False: {
        "活4": 10000000,
        "冲4": 10000000,
        "活3": 90000,
        "冲3": 10000,
        "活2": 1000,
        "冲2": 10,
        "活1": 1,
        "冲1": 1,
    }
}

def cost_count(func):
    @wraps(func)
    def costing(*args, **kw):
        a = time.time()
        ret = func(*args, **kw)
        time_cost = int((time.time()-a) * 1000)
        if time_cost > 0:
            print("Func(" + str(func.__name__) + ")\tcost: " + str(time_cost) + " ms")
        else:
            time_cost = int((time.time()-a) * 1000000)
            print("Func(" + str(func.__name__) + ")\tcost: " + str(time_cost) + " μs")
        return ret
    return costing
